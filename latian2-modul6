import 'dart:io';

class Queue<T> {
  List<T?> queue;
  int size;
  int front;
  int rear;

  Queue(this.size)
      : queue = List<T?>.filled(0, null, growable: true),
        front = -1,
        rear = -1 {
    queue.length = size;
  }

  bool isFull() {
    return (rear + 1) % size == front;
  }

  bool isEmpty() {
    return front == -1;
  }

  void enqueue(T data) {
    if (isFull()) {
      print('Antrian penuh! Tidak bisa menambahkan $data.');
      return;
    }
    if (isEmpty()) {
      front = 0;
    }
    rear = (rear + 1) % size;
    queue[rear] = data;
    print('Antrian $data berhasil ditambahkan.');
  }

  T? dequeue() {
    if (isEmpty()) {
      print('Antrian kosong! Tidak ada yang bisa dikeluarkan.');
      return null;
    }
    T? data = queue[front];
    if (front == rear) {
      // Queue jadi kosong
      front = -1;
      rear = -1;
    } else {
      front = (front + 1) % size;
    }
    print('Antrian $data telah keluar.');
    return data;
  }

  void display() {
    if (isEmpty()) {
      print('Antrian kosong!');
      return;
    }
    print('Isi Antrian:');
    if (rear >= front) {
      for (int i = front; i <= rear; i++) {
        print('- ${queue[i]}');
      }
    } else {
      for (int i = front; i < size; i++) {
        print('- ${queue[i]}');
      }
      for (int i = 0; i <= rear; i++) {
        print('- ${queue[i]}');
      }
    }
  }
}

void main() {
  Queue<String> bankQueue = Queue(5);
  bool running = true;

  while (running) {
    print('\n=== Menu Antrian Loket Bank ===');
    print('1. Tambah Antrian');
    print('2. Hapus Antrian (Panggil)');
    print('3. Lihat Antrian');
    print('4. Keluar');
    stdout.write('Pilih menu (1-4): ');
    String? choice = stdin.readLineSync();

    switch (choice) {
      case '1':
        stdout.write('Masukkan nama pelanggan: ');
        String? name = stdin.readLineSync();
        if (name != null && name.isNotEmpty) {
          bankQueue.enqueue(name);
        } else {
          print('Nama tidak boleh kosong!');
        }
        break;
      case '2':
        bankQueue.dequeue();
        break;
      case '3':
        bankQueue.display();
        break;
      case '4':
        running = false;
        print('Terima kasih telah menggunakan layanan kami.');
        break;
      default:
        print('Pilihan tidak valid, coba lagi.');
    }
  }
}
